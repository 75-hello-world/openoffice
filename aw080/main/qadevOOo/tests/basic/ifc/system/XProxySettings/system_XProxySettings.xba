<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="system_XProxySettings" script:language="StarBasic">


'*************************************************************************
'
'  Licensed to the Apache Software Foundation (ASF) under one
'  or more contributor license agreements.  See the NOTICE file
'  distributed with this work for additional information
'  regarding copyright ownership.  The ASF licenses this file
'  to you under the Apache License, Version 2.0 (the
'  "License"); you may not use this file except in compliance
'  with the License.  You may obtain a copy of the License at
'  
'    http://www.apache.org/licenses/LICENSE-2.0
'  
'  Unless required by applicable law or agreed to in writing,
'  software distributed under the License is distributed on an
'  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
'  KIND, either express or implied.  See the License for the
'  specific language governing permissions and limitations
'  under the License.
'
'*************************************************************************







Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.system.XProxySettings
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean


    Test.StartMethod("getFtpProxyAddress()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getFtpProxyAddress()) = 8)
    Test.MethodTested("getFtpProxyAddress()", bOK)

    Test.StartMethod("getFtpProxyPort()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getFtpProxyAddress()) = 8)
    Test.MethodTested("getFtpProxyPort()", bOK)

    Test.StartMethod("getGopherProxyAddress()")
    bOK = true
    bOK = bOK AND  (VarType(oObj.getGopherProxyAddress()) = 8)
    Test.MethodTested("getGopherProxyAddress()", bOK)

    Test.StartMethod("getGopherProxyPort()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getGopherProxyPort()) = 8)
    Test.MethodTested("getGopherProxyPort()", bOK)

    Test.StartMethod("getHttpProxyAddress()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getHttpProxyAddress()) = 8)
    Test.MethodTested("getHttpProxyAddress()", bOK)

    Test.StartMethod("getHttpProxyPort()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getHttpProxyPort()) = 8)
    Test.MethodTested("getHttpProxyPort()", bOK)

    Test.StartMethod("getHttpsProxyAddress()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getHttpsProxyAddress()) = 8)
    Test.MethodTested("getHttpsProxyAddress()", bOK)

    Test.StartMethod("getHttpsProxyPort()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getHttpsProxyPort()) = 8)
    Test.MethodTested("getHttpsProxyPort()", bOK)

    Test.StartMethod("getSocksProxyAddress()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getSocksProxyAddress()) = 8)
    Test.MethodTested("getSocksProxyAddress()", bOK)

    Test.StartMethod("getSocksProxyPort()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getSocksProxyPort()) = 8)
    Test.MethodTested("getSocksProxyPort()", bOK)

    Test.StartMethod("getProxyBypassAddress()")
    bOK = true
    bOK = bOK AND (VarType(oObj.getProxyBypassAddress()) = 8)
    Test.MethodTested("getProxyBypassAddress()", bOK)

    Test.StartMethod("isProxyEnabled()")
    bOK = true
    bOK = bOK AND (VarType(oObj.isProxyEnabled()) = 11)
    Test.MethodTested("isProxyEnabled()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
