diff -ru misc/boost_1_48_0/boost/config/compiler/visualc.hpp misc/build/boost_1_48_0/boost/config/compiler/visualc.hpp
--- misc/boost_1_48_0/boost/config/compiler/visualc.hpp	2011-07-16 15:12:46.000000000 -0500
+++ misc/build/boost_1_48_0/boost/config/compiler/visualc.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -102,6 +102,10 @@
 #  define BOOST_NO_ADL_BARRIER
 #endif
 
+#if _MSC_VER >= 1700  // 1700 == VC++ 11.0
+  // Not in VC11:
+#  define BOOST_NO_0X_HDR_INITIALIZER_LIST
+#endif
 
 #if (_MSC_VER <= 1600)
 // MSVC (including the latest checked version) has not yet completely 
@@ -169,6 +176,9 @@
 #  define BOOST_NO_RTTI
 #endif
 
+// disable WORKAROUND macro - gives warning for undefined macros
+#define	BOOST_STRICT_CONFIG 1
+
 //
 // C++0x features
 //
diff -ru misc/boost_1_48_0/boost/mpl/apply_wrap.hpp misc/build/boost_1_48_0/boost/mpl/apply_wrap.hpp
--- misc/boost_1_48_0/boost/mpl/apply_wrap.hpp	2008-10-11 01:50:46.000000000 -0500
+++ misc/build/boost_1_48_0/boost/mpl/apply_wrap.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -173,8 +173,8 @@
 #   undef i_
 
 ///// iteration, depth == 2
-
-#elif BOOST_PP_ITERATION_DEPTH() == 2
+#else
+#if BOOST_PP_ITERATION_DEPTH() == 2
 
 #   define j_ BOOST_PP_FRAME_ITERATION(2)
 
@@ -231,4 +231,5 @@
 #   undef j_
 
 #endif // BOOST_PP_ITERATION_DEPTH()
+#endif
 #endif // BOOST_PP_IS_ITERATING
diff -ru misc/boost_1_48_0/boost/mpl/bind.hpp misc/build/boost_1_48_0/boost/mpl/bind.hpp
--- misc/boost_1_48_0/boost/mpl/bind.hpp	2008-10-11 01:19:02.000000000 -0500
+++ misc/build/boost_1_48_0/boost/mpl/bind.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -531,7 +531,8 @@
 
 ///// iteration, depth == 2
 
-#elif BOOST_PP_ITERATION_DEPTH() == 2
+#else
+#if BOOST_PP_ITERATION_DEPTH() == 2
 
 #   define j_ BOOST_PP_FRAME_ITERATION(2)
 #   if !defined(BOOST_MPL_CFG_NO_UNNAMED_PLACEHOLDER_SUPPORT)
@@ -548,4 +549,5 @@
 #   undef j_
 
 #endif // BOOST_PP_ITERATION_DEPTH()
+#endif
 #endif // BOOST_PP_IS_ITERATING
diff -ru misc/boost_1_48_0/boost/ptr_container/detail/move.hpp misc/build/boost_1_48_0/boost/ptr_container/detail/move.hpp
--- misc/boost_1_48_0/boost/ptr_container/detail/move.hpp	2008-03-22 16:45:55.000000000 -0500
+++ misc/build/boost_1_48_0/boost/ptr_container/detail/move.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -20,7 +20,7 @@
 template<typename Ptr>
 class move_source {
 public:
-    move_source(Ptr& ptr) : ptr_(ptr) {}
+    move_source(Ptr& _ptr) : ptr_(_ptr) {}
     Ptr& ptr() const { return ptr_; }
 private:
     Ptr& ptr_;
diff -ru misc/boost_1_48_0/boost/ptr_container/detail/reversible_ptr_container.hpp misc/build/boost_1_48_0/boost/ptr_container/detail/reversible_ptr_container.hpp
--- misc/boost_1_48_0/boost/ptr_container/detail/reversible_ptr_container.hpp	2009-04-05 14:55:59.000000000 -0500
+++ misc/build/boost_1_48_0/boost/ptr_container/detail/reversible_ptr_container.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -278,9 +278,9 @@
 
     private:
         template< class ForwardIterator >
-        ForwardIterator advance( ForwardIterator begin, size_type n ) 
+        ForwardIterator advance( ForwardIterator _begin, size_type n ) 
         {
-            ForwardIterator iter = begin;
+            ForwardIterator iter = _begin;
             std::advance( iter, n );
             return iter;
         }        
diff -ru misc/boost_1_48_0/boost/ptr_container/detail/static_move_ptr.hpp misc/build/boost_1_48_0/boost/ptr_container/detail/static_move_ptr.hpp
--- misc/boost_1_48_0/boost/ptr_container/detail/static_move_ptr.hpp	2008-03-22 16:45:55.000000000 -0500
+++ misc/build/boost_1_48_0/boost/ptr_container/detail/static_move_ptr.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -151,7 +151,7 @@
     deleter_const_reference get_deleter() const { return impl_.second(); }
 private:
     template<typename TT, typename DD>
-    void check(const static_move_ptr<TT, DD>& ptr)
+    void check(const static_move_ptr<TT, DD>& _ptr)
         {
             typedef move_ptrs::is_smart_ptr_convertible<TT, T> convertible;
             BOOST_STATIC_ASSERT(convertible::value);
diff -ru misc/boost_1_48_0/boost/ptr_container/exception.hpp misc/build/boost_1_48_0/boost/ptr_container/exception.hpp
--- misc/boost_1_48_0/boost/ptr_container/exception.hpp	2008-03-22 16:45:55.000000000 -0500
+++ misc/build/boost_1_48_0/boost/ptr_container/exception.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -24,7 +24,7 @@
     {
         const char* what_;
     public:
-        bad_ptr_container_operation( const char* what ) : what_( what )
+        bad_ptr_container_operation( const char* text ) : what_( text )
         { }
         
         virtual const char* what() const throw()
@@ -38,7 +38,7 @@
     class bad_index : public bad_ptr_container_operation
     {
     public:
-        bad_index( const char* what ) : bad_ptr_container_operation( what )
+        bad_index( const char* text ) : bad_ptr_container_operation( text )
         { }
     };
 
diff -ru misc/boost_1_48_0/boost/spirit/home/classic/core/non_terminal/subrule.hpp misc/build/boost_1_48_0/boost/spirit/home/classic/core/non_terminal/subrule.hpp
--- misc/boost_1_48_0/boost/spirit/home/classic/core/non_terminal/subrule.hpp	2010-04-06 19:41:42.000000000 -0500
+++ misc/build/boost_1_48_0/boost/spirit/home/classic/core/non_terminal/subrule.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -210,7 +210,7 @@
             subrule_list<
                 subrule_parser<ID2, DefT2, ContextT2>,
                 nil_t> >
-        operator,(subrule_parser<ID2, DefT2, ContextT2> const& rhs) const
+        operator,(subrule_parser<ID2, DefT2, ContextT2> const& _rhs) const
         {
             return subrule_list<
                 self_t,
@@ -220,7 +220,7 @@
                         *this,
                         subrule_list<
                             subrule_parser<ID2, DefT2, ContextT2>, nil_t>(
-                                rhs, nil_t()));
+                                _rhs, nil_t()));
         }
 
         typename DefT::embed_t rhs;
diff -ru misc/boost_1_48_0/boost/spirit/home/classic/debug/impl/parser_names.ipp misc/build/boost_1_48_0/boost/spirit/home/classic/debug/impl/parser_names.ipp
--- misc/boost_1_48_0/boost/spirit/home/classic/debug/impl/parser_names.ipp	2008-06-22 10:05:38.000000000 -0500
+++ misc/build/boost_1_48_0/boost/spirit/home/classic/debug/impl/parser_names.ipp	2012-09-18 20:24:01.000000000 -0500
@@ -395,13 +395,13 @@
             }
 
             bool register_node(void const *r, char const *name_to_register,
-                bool trace_node)
+                bool _trace_node)
             {
                 if (infos.find(r) != infos.end())
                     return false;
 
                 return infos.insert(rule_infos::value_type(r,
-                    rule_info(std::string(name_to_register), trace_node))
+                    rule_info(std::string(name_to_register), _trace_node))
                 ).second;
             }
 
