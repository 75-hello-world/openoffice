/**************************************************************
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 *************************************************************/


#ifndef __com_sun_star_awt_XMenuExtended2_idl__
#define __com_sun_star_awt_XMenuExtended2_idl__

#ifndef __com_sun_star_awt_XMenu_idl__
#include <com/sun/star/awt/XMenu.idl>
#endif

#ifndef __com_sun_star_awt_XMenuExtended_idl__
#include <com/sun/star/awt/XMenuExtended.idl>
#endif

#ifndef __com_sun_star_awt_MenuItemType_idl__
#include <com/sun/star/awt/MenuItemType.idl>
#endif

#ifndef __com_sun_star_container_NoSuchElementException_idl__
#include <com/sun/star/container/NoSuchElementException.idl>
#endif

//=============================================================================

module com {  module sun {  module star {  module awt {

/** specifies extended menu functions.
 */

published interface XMenuExtended2
{
    /** specifies some extended menu functions, like setting a command URL and a help command for a menu item.<br>
        These functions are available for both menu bar and popup menu.
    */
    interface com::sun::star::awt::XMenuExtended;

    /** specifies basic menu functions.
    */
    interface com::sun::star::awt::XMenu;


    //=========================================================================

    /** checks whether an <type>XMenu</type> is an <type>XPopupMenu</type>.

        @return
                <TRUE/> if the menu is a <type>PopupMenu</type>, <FALSE/> if it is a <type>MenuBar</type>.
    */
    boolean isPopupMenu();

    //.........................................................................

    /** removes all items from the menu.
    */
    void clear();

    //.........................................................................

    /** retrieves the type of the menu item.

        @param nItemPos
            specifies the position of the menu item for which the item type is queried.

        @throws <type scope="com::sun::star::container">NoSuchElementException</type>
            if there is no menu item in the position specified in <var>nItemPos</var>.

        @see MenuItemType
    */
    ::com::sun::star::awt::MenuItemType getItemType( [in] short nItemPos )
        raises ( ::com::sun::star::container::NoSuchElementException );

    //.........................................................................

    /** specifies whether disabled menu entries should be hidden, or not.

        @param bHide
            if <TRUE/>, disabled menu entries are hidden.

        @see
            <member scope="com::sun::star::awt">XMenu::enableItem()</member>
    */
    void hideDisabledEntries( [in] boolean bHide );


};

}; }; }; };

#endif
