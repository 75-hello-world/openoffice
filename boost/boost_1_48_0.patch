diff -ru misc/boost_1_48_0/boost/config/compiler/visualc.hpp misc/build/boost_1_48_0/boost/config/compiler/visualc.hpp
--- misc/boost_1_48_0/boost/config/compiler/visualc.hpp	2011-07-16 15:12:46.000000000 -0500
+++ misc/build/boost_1_48_0/boost/config/compiler/visualc.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -102,6 +102,10 @@
 #  define BOOST_NO_ADL_BARRIER
 #endif
 
+#if _MSC_VER >= 1700  // 1700 == VC++ 11.0
+  // Not in VC11:
+#  define BOOST_NO_0X_HDR_INITIALIZER_LIST
+#endif
 
 #if (_MSC_VER <= 1600)
 // MSVC (including the latest checked version) has not yet completely 
@@ -169,6 +176,9 @@
 #  define BOOST_NO_RTTI
 #endif
 
+// disable WORKAROUND macro - gives warning for undefined macros
+#define	BOOST_STRICT_CONFIG 1
+
 //
 // C++0x features
 //
diff -ru misc/boost_1_48_0/boost/mpl/apply_wrap.hpp misc/build/boost_1_48_0/boost/mpl/apply_wrap.hpp
--- misc/boost_1_48_0/boost/mpl/apply_wrap.hpp	2008-10-11 01:50:46.000000000 -0500
+++ misc/build/boost_1_48_0/boost/mpl/apply_wrap.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -173,8 +173,8 @@
 #   undef i_
 
 ///// iteration, depth == 2
-
-#elif BOOST_PP_ITERATION_DEPTH() == 2
+#else
+#if BOOST_PP_ITERATION_DEPTH() == 2
 
 #   define j_ BOOST_PP_FRAME_ITERATION(2)
 
@@ -231,4 +231,5 @@
 #   undef j_
 
 #endif // BOOST_PP_ITERATION_DEPTH()
+#endif
 #endif // BOOST_PP_IS_ITERATING
diff -ru misc/boost_1_48_0/boost/mpl/bind.hpp misc/build/boost_1_48_0/boost/mpl/bind.hpp
--- misc/boost_1_48_0/boost/mpl/bind.hpp	2008-10-11 01:19:02.000000000 -0500
+++ misc/build/boost_1_48_0/boost/mpl/bind.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -531,7 +531,8 @@
 
 ///// iteration, depth == 2
 
-#elif BOOST_PP_ITERATION_DEPTH() == 2
+#else
+#if BOOST_PP_ITERATION_DEPTH() == 2
 
 #   define j_ BOOST_PP_FRAME_ITERATION(2)
 #   if !defined(BOOST_MPL_CFG_NO_UNNAMED_PLACEHOLDER_SUPPORT)
@@ -548,4 +549,5 @@
 #   undef j_
 
 #endif // BOOST_PP_ITERATION_DEPTH()
+#endif
 #endif // BOOST_PP_IS_ITERATING
diff -ru misc/boost_1_48_0/boost/ptr_container/detail/move.hpp misc/build/boost_1_48_0/boost/ptr_container/detail/move.hpp
--- misc/boost_1_48_0/boost/ptr_container/detail/move.hpp	2008-03-22 16:45:55.000000000 -0500
+++ misc/build/boost_1_48_0/boost/ptr_container/detail/move.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -20,7 +20,7 @@
 template<typename Ptr>
 class move_source {
 public:
-    move_source(Ptr& ptr) : ptr_(ptr) {}
+    move_source(Ptr& _ptr) : ptr_(_ptr) {}
     Ptr& ptr() const { return ptr_; }
 private:
     Ptr& ptr_;
diff -ru misc/boost_1_48_0/boost/ptr_container/detail/reversible_ptr_container.hpp misc/build/boost_1_48_0/boost/ptr_container/detail/reversible_ptr_container.hpp
--- misc/boost_1_48_0/boost/ptr_container/detail/reversible_ptr_container.hpp	2009-04-05 14:55:59.000000000 -0500
+++ misc/build/boost_1_48_0/boost/ptr_container/detail/reversible_ptr_container.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -278,9 +278,9 @@
 
     private:
         template< class ForwardIterator >
-        ForwardIterator advance( ForwardIterator begin, size_type n ) 
+        ForwardIterator advance( ForwardIterator _begin, size_type n ) 
         {
-            ForwardIterator iter = begin;
+            ForwardIterator iter = _begin;
             std::advance( iter, n );
             return iter;
         }        
diff -ru misc/boost_1_48_0/boost/ptr_container/detail/static_move_ptr.hpp misc/build/boost_1_48_0/boost/ptr_container/detail/static_move_ptr.hpp
--- misc/boost_1_48_0/boost/ptr_container/detail/static_move_ptr.hpp	2008-03-22 16:45:55.000000000 -0500
+++ misc/build/boost_1_48_0/boost/ptr_container/detail/static_move_ptr.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -151,7 +151,7 @@
     deleter_const_reference get_deleter() const { return impl_.second(); }
 private:
     template<typename TT, typename DD>
-    void check(const static_move_ptr<TT, DD>& ptr)
+    void check(const static_move_ptr<TT, DD>& _ptr)
         {
             typedef move_ptrs::is_smart_ptr_convertible<TT, T> convertible;
             BOOST_STATIC_ASSERT(convertible::value);
diff -ru misc/boost_1_48_0/boost/ptr_container/exception.hpp misc/build/boost_1_48_0/boost/ptr_container/exception.hpp
--- misc/boost_1_48_0/boost/ptr_container/exception.hpp	2008-03-22 16:45:55.000000000 -0500
+++ misc/build/boost_1_48_0/boost/ptr_container/exception.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -24,7 +24,7 @@
     {
         const char* what_;
     public:
-        bad_ptr_container_operation( const char* what ) : what_( what )
+        bad_ptr_container_operation( const char* text ) : what_( text )
         { }
         
         virtual const char* what() const throw()
@@ -38,7 +38,7 @@
     class bad_index : public bad_ptr_container_operation
     {
     public:
-        bad_index( const char* what ) : bad_ptr_container_operation( what )
+        bad_index( const char* text ) : bad_ptr_container_operation( text )
         { }
     };
 
diff -ru misc/boost_1_48_0/boost/spirit/home/classic/core/non_terminal/subrule.hpp misc/build/boost_1_48_0/boost/spirit/home/classic/core/non_terminal/subrule.hpp
--- misc/boost_1_48_0/boost/spirit/home/classic/core/non_terminal/subrule.hpp	2010-04-06 19:41:42.000000000 -0500
+++ misc/build/boost_1_48_0/boost/spirit/home/classic/core/non_terminal/subrule.hpp	2012-09-18 20:24:01.000000000 -0500
@@ -210,7 +210,7 @@
             subrule_list<
                 subrule_parser<ID2, DefT2, ContextT2>,
                 nil_t> >
-        operator,(subrule_parser<ID2, DefT2, ContextT2> const& rhs) const
+        operator,(subrule_parser<ID2, DefT2, ContextT2> const& _rhs) const
         {
             return subrule_list<
                 self_t,
@@ -220,7 +220,7 @@
                         *this,
                         subrule_list<
                             subrule_parser<ID2, DefT2, ContextT2>, nil_t>(
-                                rhs, nil_t()));
+                                _rhs, nil_t()));
         }
 
         typename DefT::embed_t rhs;
diff -ru misc/boost_1_48_0/boost/spirit/home/classic/debug/impl/parser_names.ipp misc/build/boost_1_48_0/boost/spirit/home/classic/debug/impl/parser_names.ipp
--- misc/boost_1_48_0/boost/spirit/home/classic/debug/impl/parser_names.ipp	2008-06-22 10:05:38.000000000 -0500
+++ misc/build/boost_1_48_0/boost/spirit/home/classic/debug/impl/parser_names.ipp	2012-09-18 20:24:01.000000000 -0500
@@ -395,13 +395,13 @@
             }
 
             bool register_node(void const *r, char const *name_to_register,
-                bool trace_node)
+                bool _trace_node)
             {
                 if (infos.find(r) != infos.end())
                     return false;
 
                 return infos.insert(rule_infos::value_type(r,
-                    rule_info(std::string(name_to_register), trace_node))
+                    rule_info(std::string(name_to_register), _trace_node))
                 ).second;
             }
 
diff -ru misc/boost_1_48_0/boost/unordered/detail/emplace_args.hpp misc/build/boost_1_48_0/boost/unordered/detail/emplace_args.hpp
--- misc/boost_1_48_0/boost/unordered/detail/emplace_args.hpp
+++ misc/build/boost_1_48_0/boost/unordered/detail/emplace_args.hpp
@@ -89,5 +89,5 @@
         BOOST_PP_REPEAT_##z(n, BOOST_UNORDERED_EARGS_MEMBER, _)             \
         BOOST_PP_CAT(emplace_args, n) (                                     \
-            BOOST_PP_ENUM_BINARY_PARAMS_Z(z, n, Arg, a)                     \
+            BOOST_PP_ENUM_BINARY_PARAMS_Z(z, n, Arg, b)                     \
         ) : BOOST_PP_ENUM_##z(n, BOOST_UNORDERED_EARGS_INIT, _)             \
         {}                                                                  \
@@ -99,10 +99,10 @@
         BOOST_PP_ENUM_PARAMS_Z(z, n, A)                                     \
     > create_emplace_args(                                                  \
-        BOOST_PP_ENUM_##z(n, BOOST_UNORDERED_FWD_PARAM, a)                  \
+        BOOST_PP_ENUM_##z(n, BOOST_UNORDERED_FWD_PARAM, b)                  \
     )                                                                       \
     {                                                                       \
         BOOST_PP_CAT(emplace_args, n) <                                     \
             BOOST_PP_ENUM_PARAMS_Z(z, n, A)                                 \
-        > e(BOOST_PP_ENUM_PARAMS_Z(z, n, a));                               \
+        > e(BOOST_PP_ENUM_PARAMS_Z(z, n, b));                               \
         return e;                                                           \
     }
@@ -116,5 +116,5 @@
 #define BOOST_UNORDERED_EARGS_INIT(z, n, _)                                 \
     BOOST_PP_CAT(a, n)(                                                     \
-        boost::forward<BOOST_PP_CAT(A,n)>(BOOST_PP_CAT(a, n)))
+        boost::forward<BOOST_PP_CAT(A,n)>(BOOST_PP_CAT(b, n)))
 
 #else
@@ -126,5 +126,5 @@
 
 #define BOOST_UNORDERED_EARGS_INIT(z, n, _)                                 \
-    BOOST_PP_CAT(a, n)(BOOST_PP_CAT(a, n))
+    BOOST_PP_CAT(a, n)(BOOST_PP_CAT(b, n))
 
 #endif
--- misc/boost_1_48_0/boost/unordered/detail/buckets.hpp	2011-10-09 20:30:10.000000000 +0200
+++ misc/build/boost_1_48_0/boost/unordered/detail/buckets.hpp	2012-06-21 10:22:36.000000000 +0000
@@ -477,22 +477,22 @@
 
         // This is called after erasing a node or group of nodes to fix up
         // the bucket pointers.
-        void fix_buckets(bucket_pointer bucket,
+        void fix_buckets(bucket_pointer bucket_arg,
                 previous_pointer prev, node_pointer next)
         {
             if (!next)
             {
-                if (bucket->next_ == prev) bucket->next_ = node_pointer();
+                if (bucket_arg->next_ == prev) bucket_arg->next_ = node_pointer();
             }
             else
             {
                 bucket_pointer next_bucket = this->get_bucket(
                     next->hash_ % this->bucket_count_);
 
-                if (next_bucket != bucket)
+                if (next_bucket != bucket_arg)
                 {
                     next_bucket->next_ = prev;
-                    if (bucket->next_ == prev) bucket->next_ = node_pointer();
+                    if (bucket_arg->next_ == prev) bucket_arg->next_ = node_pointer();
                 }
             }
         }
--- misc/boost_1_48_0/boost/unordered/detail/equivalent.hpp	2011-11-04 03:31:36.000000000 +0100
+++ misc/build/boost_1_48_0/boost/unordered/detail/equivalent.hpp	2012-06-21 10:23:12.000000000 +0000
@@ -246,14 +246,14 @@
             node_pointer n = this->find_node(k);
             if (!n) return 0;
 
-            std::size_t count = 0;
+            std::size_t lcl_count = 0;
             node_pointer it = n;
             do {
                 it = static_cast<node_pointer>(it->group_prev_);
-                ++count;
+                ++lcl_count;
             } while(it != n);
 
-            return count;
+            return lcl_count;
         }
 
         std::pair<iterator, iterator>
@@ -523,9 +523,9 @@
 
             std::size_t hash = this->hash_function()(k);
             std::size_t bucket_index = hash % this->bucket_count_;
-            bucket_pointer bucket = this->get_bucket(bucket_index);
+            bucket_pointer lcl_bucket = this->get_bucket(bucket_index);
 
-            previous_pointer prev = bucket->next_;
+            previous_pointer prev = lcl_bucket->next_;
             if (!prev) return 0;
 
             for (;;)
@@ -548,7 +548,7 @@
                 static_cast<node_pointer>(pos->group_prev_)->next_;
             node_pointer end = static_cast<node_pointer>(end1);
             prev->next_ = end1;
-            this->fix_buckets(bucket, prev, end);
+            this->fix_buckets(lcl_bucket, prev, end);
             return this->delete_nodes(pos, end);
         }
 
@@ -557,11 +557,11 @@
             BOOST_ASSERT(r);
             node_pointer next = static_cast<node_pointer>(r->next_);
 
-            bucket_pointer bucket = this->get_bucket(
+            bucket_pointer lcl_bucket = this->get_bucket(
                 r->hash_ % this->bucket_count_);
-            previous_pointer prev = unlink_node(*bucket, r);
+            previous_pointer prev = unlink_node(*lcl_bucket, r);
 
-            this->fix_buckets(bucket, prev, next);
+            this->fix_buckets(lcl_bucket, prev, next);
 
             this->delete_node(r);
 
--- misc/boost_1_48_0/boost/unordered/detail/unique.hpp	2011-11-04 03:31:36.000000000 +0100
+++ misc/build/boost_1_48_0/boost/unordered/detail/unique.hpp	2012-06-21 10:23:00.000000000 +0000
@@ -523,9 +523,9 @@
 
             std::size_t hash = this->hash_function()(k);
             std::size_t bucket_index = hash % this->bucket_count_;
-            bucket_pointer bucket = this->get_bucket(bucket_index);
+            bucket_pointer lcl_bucket = this->get_bucket(bucket_index);
 
-            previous_pointer prev = bucket->next_;
+            previous_pointer prev = lcl_bucket->next_;
             if (!prev) return 0;
 
             for (;;)
@@ -545,7 +545,7 @@
             node_pointer pos = static_cast<node_pointer>(prev->next_);
             node_pointer end = static_cast<node_pointer>(pos->next_);
             prev->next_ = pos->next_;
-            this->fix_buckets(bucket, prev, end);
+            this->fix_buckets(lcl_bucket, prev, end);
             return this->delete_nodes(pos, end);
         }
 
@@ -554,11 +554,11 @@
             BOOST_ASSERT(r);
             node_pointer next = static_cast<node_pointer>(r->next_);
 
-            bucket_pointer bucket = this->get_bucket(
+            bucket_pointer lcl_bucket = this->get_bucket(
                 r->hash_ % this->bucket_count_);
-            previous_pointer prev = unlink_node(*bucket, r);
+            previous_pointer prev = unlink_node(*lcl_bucket, r);
 
-            this->fix_buckets(bucket, prev, next);
+            this->fix_buckets(lcl_bucket, prev, next);
 
             this->delete_node(r);
 
